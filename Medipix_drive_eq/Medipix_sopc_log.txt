Altera SOPC Builder Version 10.01 Build 262
Copyright (c) 1999-2009 Altera Corporation.  All rights reserved.


No .sopc_builder configuration file(!)
# 2014.08.04 10:17:27 (*) mk_custom_sdk starting
# 2014.08.04 10:17:27 (*) Reading project D:/ARQ/Prototipo_Medipix/Projeto/Testes/Medipix_drive_eq/Medipix_sopc.ptf.

# 2014.08.04 10:17:27 (*) Finding all CPUs
# 2014.08.04 10:17:27 (*) Finding all available components
# 2014.08.04 10:17:27 (*) Reading D:/ARQ/Prototipo_Medipix/Projeto/Testes/Medipix_drive_eq/.sopc_builder/install.ptf

# 2014.08.04 10:17:27 (*) Found 69 components

# 2014.08.04 10:17:28 (*) Finding all peripherals

# 2014.08.04 10:17:28 (*) Finding software components

# 2014.08.04 10:17:28 (*) (Legacy SDK Generation Skipped)
# 2014.08.04 10:17:28 (*) (All TCL Script Generation Skipped)
# 2014.08.04 10:17:28 (*) (No Libraries Built)
# 2014.08.04 10:17:28 (*) (Contents Generation Skipped)
# 2014.08.04 10:17:28 (*) mk_custom_sdk finishing

# 2014.08.04 10:17:28 (*) Starting generation for system: Medipix_sopc.

.
.
..
.
.
.
.
.
.............

# 2014.08.04 10:17:29 (*) Running Generator Program for cpu_linux

# 2014.08.04 10:17:31 (*) Starting Nios II generation
# 2014.08.04 10:17:31 (*)   Checking for plaintext license.
# 2014.08.04 10:17:32 (*)   Plaintext license not found.
# 2014.08.04 10:17:32 (*)   Checking for encrypted license (non-evaluation).
# 2014.08.04 10:17:32 (*)   Encrypted license found.  SOF will not be time-limited.
# 2014.08.04 10:17:32 (*)   Getting CPU configuration settings
# 2014.08.04 10:17:32 (*)   Elaborating CPU configuration settings
# 2014.08.04 10:17:32 (*)   Creating all objects for CPU

# 2014.08.04 10:17:32 (*)     Testbench
# 2014.08.04 10:17:32 (*)     Instruction decoding
# 2014.08.04 10:17:32 (*)       Instruction fields
# 2014.08.04 10:17:32 (*)       Instruction decodes
# 2014.08.04 10:17:33 (*)       Signals for RTL simulation waveforms
# 2014.08.04 10:17:33 (*)       Instruction controls
# 2014.08.04 10:17:33 (*)     Pipeline frontend
# 2014.08.04 10:17:33 (*)     Pipeline backend
# 2014.08.04 10:17:35 (*)   Generating HDL from CPU objects
# 2014.08.04 10:17:37 (*)   Creating encrypted HDL

# 2014.08.04 10:17:38 (*) Done Nios II generation

# 2014.08.04 10:17:38 (*) Running Generator Program for jtag_uart_0

# 2014.08.04 10:17:39 (*) Running Generator Program for sys_clk_freq

# 2014.08.04 10:17:40 (*) Running Generator Program for ram

# 2014.08.04 10:17:40 (*) Running Generator Program for epcs_controller

# 2014.08.04 10:17:41 (*) Running Generator Program for spi_0

# 2014.08.04 10:17:42 (*) Running Generator Program for uart_0

# 2014.08.04 10:17:43 (*) Running Generator Program for pio_chip_busy

# 2014.08.04 10:17:44 (*) Running Generator Program for Medipix_sopc_burst_0

# 2014.08.04 10:17:45 (*) Running Generator Program for Medipix_sopc_burst_1

# 2014.08.04 10:17:46 (*) Running Generator Program for Medipix_sopc_burst_2

# 2014.08.04 10:17:46 (*) Running Generator Program for Medipix_sopc_burst_3

# 2014.08.04 10:17:47 (*) Running Generator Program for Medipix_sopc_burst_4

# 2014.08.04 10:17:48 (*) Running Generator Program for Medipix_sopc_burst_5

# 2014.08.04 10:17:49 (*) Running Generator Program for Medipix_sopc_burst_6

# 2014.08.04 10:17:50 (*) Running Generator Program for Medipix_sopc_burst_7

# 2014.08.04 10:17:51 (*) Running Generator Program for Medipix_sopc_burst_8

# 2014.08.04 10:17:52 (*) Running Generator Program for Medipix_sopc_burst_9

# 2014.08.04 10:17:53 (*) Running Generator Program for Medipix_sopc_burst_10

# 2014.08.04 10:17:54 (*) Running Generator Program for Medipix_sopc_burst_11

# 2014.08.04 10:17:55 (*) Running Generator Program for Medipix_sopc_burst_12

# 2014.08.04 10:17:56 (*) Running Generator Program for clock_crossing

.


# 2014.08.04 10:17:57 (*) Running Test Generator Program for ram

# 2014.08.04 10:17:58 (*) Making arbitration and system (top) modules.

# 2014.08.04 10:18:18 (*) Generating Quartus symbol for top level: Medipix_sopc

# 2014.08.04 10:18:19 (*) Symbol D:/ARQ/Prototipo_Medipix/Projeto/Testes/Medipix_drive_eq/Medipix_sopc.bsf already exists, no need to regenerate
# 2014.08.04 10:18:19 (*) Creating command-line system-generation script: D:/ARQ/Prototipo_Medipix/Projeto/Testes/Medipix_drive_eq/Medipix_sopc_generation_script

# 2014.08.04 10:18:19 (*) Running setup for HDL simulator: modelsim


# 2014.08.04 10:18:19 (*) Completed generation for system: Medipix_sopc.
# 2014.08.04 10:18:19 (*) THE FOLLOWING SYSTEM ITEMS HAVE BEEN GENERATED:
  SOPC Builder database : D:/ARQ/Prototipo_Medipix/Projeto/Testes/Medipix_drive_eq/Medipix_sopc.ptf 
  System HDL Model : D:/ARQ/Prototipo_Medipix/Projeto/Testes/Medipix_drive_eq/Medipix_sopc.v 
  System Generation Script : D:/ARQ/Prototipo_Medipix/Projeto/Testes/Medipix_drive_eq/Medipix_sopc_generation_script 

# 2014.08.04 10:18:19 (*) SUCCESS: SYSTEM GENERATION COMPLETED.


Press 'Exit' to exit.
