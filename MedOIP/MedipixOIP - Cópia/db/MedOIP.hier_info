|Top_MedOIP
Clk25 => Clk25.IN1
Clk125 => ~NO_FANOUT~
Eth_Txc <= Clk_25.DB_MAX_OUTPUT_PORT_TYPE
Eth_TxCtl <= <GND>
Eth_Txd[0] <= <GND>
Eth_Txd[1] <= <GND>
Eth_Txd[2] <= <GND>
Eth_Txd[3] <= <GND>
Eth_Rxc => ~NO_FANOUT~
Eth_RxCtl => ~NO_FANOUT~
Eth_Rxd[0] => ~NO_FANOUT~
Eth_Rxd[1] => ~NO_FANOUT~
Eth_Rxd[2] => ~NO_FANOUT~
Eth_Rxd[3] => ~NO_FANOUT~
Eth_Mdc <= <GND>
Eth_Mdio <> <UNC>
Eth_Rst_N <= <VCC>
Led_N[0] <= <GND>
Led_N[1] <= <GND>
Led_N[2] <= <GND>


|Top_MedOIP|Top_pll:u_Top_pll
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
c1 <= altpll:altpll_component.clk[1]
c2 <= altpll:altpll_component.clk[2]


|Top_MedOIP|Top_pll:u_Top_pll|altpll:altpll_component
inclk[0] => Top_pll_altpll:auto_generated.inclk[0]
inclk[1] => Top_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => Top_pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Top_MedOIP|Top_pll:u_Top_pll|altpll:altpll_component|Top_pll_altpll:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|Top_MedOIP|ts_packet_gen:u_ts_packet_gen
clk => ts_end~reg0.CLK
clk => ts_start~reg0.CLK
clk => ts_valid~reg0.CLK
clk => ts_data[0]~reg0.CLK
clk => ts_data[1]~reg0.CLK
clk => ts_data[2]~reg0.CLK
clk => ts_data[3]~reg0.CLK
clk => ts_data[4]~reg0.CLK
clk => ts_data[5]~reg0.CLK
clk => ts_data[6]~reg0.CLK
clk => ts_data[7]~reg0.CLK
clk => tx_count[0].CLK
clk => tx_count[1].CLK
clk => tx_count[2].CLK
clk => tx_count[3].CLK
clk => tx_count[4].CLK
clk => tx_count[5].CLK
clk => tx_count[6].CLK
clk => tx_count[7].CLK
clk => tx_count[8].CLK
clk => tx_count[9].CLK
clk => gap_count[0].CLK
clk => gap_count[1].CLK
clk => gap_count[2].CLK
clk => gap_count[3].CLK
clk => gap_count[4].CLK
clk => gap_count[5].CLK
clk => gap_count[6].CLK
clk => gap_count[7].CLK
clk => gap_count[8].CLK
clk => gap_count[9].CLK
clk => gap_count[10].CLK
clk => gap_count[11].CLK
clk => gap_count[12].CLK
clk => gap_count[13].CLK
clk => gap_count[14].CLK
clk => gap_count[15].CLK
clk => enable_s.CLK
clk => enable_d.CLK
rst => ts_end~reg0.ACLR
rst => ts_start~reg0.ACLR
rst => ts_valid~reg0.ACLR
rst => ts_data[0]~reg0.ACLR
rst => ts_data[1]~reg0.ACLR
rst => ts_data[2]~reg0.ACLR
rst => ts_data[3]~reg0.ACLR
rst => ts_data[4]~reg0.ACLR
rst => ts_data[5]~reg0.ACLR
rst => ts_data[6]~reg0.ACLR
rst => ts_data[7]~reg0.ACLR
rst => tx_count[0].ACLR
rst => tx_count[1].ACLR
rst => tx_count[2].ACLR
rst => tx_count[3].ACLR
rst => tx_count[4].ACLR
rst => tx_count[5].ACLR
rst => tx_count[6].ACLR
rst => tx_count[7].ACLR
rst => tx_count[8].ACLR
rst => tx_count[9].ACLR
rst => gap_count[0].ACLR
rst => gap_count[1].ACLR
rst => gap_count[2].ACLR
rst => gap_count[3].ACLR
rst => gap_count[4].ACLR
rst => gap_count[5].ACLR
rst => gap_count[6].ACLR
rst => gap_count[7].ACLR
rst => gap_count[8].ACLR
rst => gap_count[9].ACLR
rst => gap_count[10].ACLR
rst => gap_count[11].ACLR
rst => gap_count[12].ACLR
rst => gap_count[13].ACLR
rst => gap_count[14].ACLR
rst => gap_count[15].ACLR
rst => enable_s.ACLR
rst => enable_d.ACLR
enable => enable_d.DATAIN
id[0] => Selector7.IN5
id[1] => Selector6.IN5
id[2] => Selector5.IN5
id[3] => Selector4.IN5
id[4] => Selector3.IN5
id[5] => Selector2.IN5
id[6] => Selector1.IN5
id[7] => Selector0.IN5
gap[0] => gap_count.DATAB
gap[1] => gap_count.DATAB
gap[2] => gap_count.DATAB
gap[3] => gap_count.DATAB
gap[4] => gap_count.DATAB
gap[5] => gap_count.DATAB
gap[6] => gap_count.DATAB
gap[7] => gap_count.DATAB
gap[8] => gap_count.DATAB
gap[9] => gap_count.DATAB
gap[10] => gap_count.DATAB
gap[11] => gap_count.DATAB
gap[12] => gap_count.DATAB
gap[13] => gap_count.DATAB
gap[14] => gap_count.DATAB
gap[15] => gap_count.DATAB
ts_data[0] <= ts_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_data[1] <= ts_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_data[2] <= ts_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_data[3] <= ts_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_data[4] <= ts_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_data[5] <= ts_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_data[6] <= ts_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_data[7] <= ts_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_valid <= ts_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_start <= ts_start~reg0.DB_MAX_OUTPUT_PORT_TYPE
ts_end <= ts_end~reg0.DB_MAX_OUTPUT_PORT_TYPE


